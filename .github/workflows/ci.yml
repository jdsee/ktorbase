name: CI Pipeline

on: [ push ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # ktor prevents compile-time 11, see: https://youtrack.jetbrains.com/issue/KTOR-619
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Generate & Build
        run: ./generate.sh ~/tmp com.linkedplanet test-project && cd ~/tmp/com.linkedplanet.test-project && ./gradlew build -PdevMode=false

      - name: Gradle Production Build
        run: ./gradlew build -PdevMode=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: linkedplanet/ktorbase:latest


  integration-test:
    needs: build
    runs-on: ubuntu-latest
    services:
      ktorbase:
        image: linkedplanet/ktorbase:latest
        ports:
          - 9090:9090
        env:
          APPLICATION_SECRET: a38103acb878406bb22c32c12bdfba0b
    steps:
      - name: Smoketest
        run: curl -S --fail http://localhost:9090/health


  aws-deploy:
    runs-on: ubuntu-latest
    container: tstrohmeier/awscli:3.7.2
    services:
      localstack:
        image: localstack/localstack
        env:
          SERVICES: cloudformation
          DEFAULT_REGION: eu-central-1
    steps:
      - uses: actions/checkout@v2

      - name: Redirect AWS CLI to LocalStack
        run: |
          mv /usr/local/bin/aws /usr/local/bin/aws.orig
          echo '#!/bin/sh' > /usr/local/bin/aws
          echo 'aws.orig --endpoint-url "http://localstack:4566" "$@"' >> /usr/local/bin/aws
          chmod 755 /usr/local/bin/aws

      - name: Deploy CloudFormation
        env:
          AWS_ACCESS_KEY_ID: foo
          AWS_SECRET_ACCESS_KEY: bar
          AWS_DEFAULT_REGION: eu-central-1
        run: ./pipelines/deploy.sh test latest
