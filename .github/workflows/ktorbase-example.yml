name: KtorBase-Example

on:
  push:
    branches:
      - master

jobs:

  github-build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-example-ktorbase-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-example-ktorbase-

      # ktor prevents compile-time 11, see: https://youtrack.jetbrains.com/issue/KTOR-619
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Initialize
        run: >
          BRANCH=${GITHUB_REF#refs/heads/};
          curl -O -s "https://raw.githubusercontent.com/linked-planet/ktorbase/$BRANCH/init.sh";
          sh ./init.sh /tmp com.linked-planet ktor-example "$BRANCH";
          echo "Creating temporary repository with initial version ...";
          cd /tmp/com.linked-planet.ktor-example;
          git init;
          git config user.email "test@example.com";
          git config user.name "test";
          git add .;
          git commit -m "Initial commit"

      - name: Update
        run: >
          BRANCH=${GITHUB_REF#refs/heads/};
          curl -O -s "https://raw.githubusercontent.com/linked-planet/ktorbase/$BRANCH/update.sh";
          sh ./update.sh /tmp/com.linked-planet.ktor-example com.linked-planet ktor-example "$BRANCH";
          echo "Comparing updated version with initial version ...";
          cd /tmp/com.linked-planet.ktor-example;
          git add .;
          git diff --cached --exit-code

      - name: Gradle Build
        run: cd /tmp/com.linked-planet.ktor-example && ./gradlew build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Build and Push
        working-directory: /tmp/com.linked-planet.ktor-example
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_REGISTRY_URL: ${{ secrets.AWS_REGISTRY_URL }}
        run: ./pipelines/docker-build-push-aws.sh latest

      - name: Deploy CloudFormation
        working-directory: /tmp/com.linked-planet.ktor-example
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: ./pipelines/deploy.sh test latest && ./pipelines/deploy-wait.sh test latest

      - name: Run Integration Tests
        working-directory: /tmp/com.linked-planet.ktor-example
        env:
          BACKEND_BASE_URL: https://ktorbase.opencpms.io/
          BACKEND_PORT: 443
        run: ./gradlew integrationTest

  bitbucket-build-and-test:
    needs: bitbucket-build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-example-ktorbase-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-example-ktorbase-

      # ktor prevents compile-time 11, see: https://youtrack.jetbrains.com/issue/KTOR-619
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          name: id_rsa
          key: ${{ secrets.BITBUCKET_SSH_KEY }}
          known_hosts: ${{ secrets.BITBUCKET_KNOWN_HOSTS }}

      - name: Clone from Bitbucket
        run: >
          git clone git@bitbucket.org:linked-planet/com.linked-planet.ktor-bitbucket-example.git /tmp/com.linked-planet.ktor-bitbucket-example

      - name: Update
        run: >
          BRANCH=${GITHUB_REF#refs/heads/};
          curl -O -s "https://raw.githubusercontent.com/linked-planet/ktorbase/$BRANCH/update.sh";
          sh ./update.sh /tmp/com.linked-planet.ktor-example com.linked-planet ktor-example "$BRANCH"

      - name: Commit and Push to Bitbucket
        run: |
          ORIG_DIR=$(pwd);
          cd /tmp/com.linked-planet.ktor-bitbucket-example;
          git config --global user.email "${{ secrets.BITBUCKET_USER_MAIL }}";
          git config --global user.name "${{ secrets.BITBUCKET_USER_NAME }}";
          git add -A;
          echo "Identifying changes ...";
          git status --porcelain;
          if ! git diff-index --quiet HEAD --; then git commit -m "updated project from Github commit ${GITHUB_SHA} (${GITHUB_REF})" && touch "$ORIG_DIR/run_pipeline"; fi;
          git push

      - name: Watch Bitbucket Pipeline
        run: |
          if [ ! -f run_pipeline ]; then echo "-> Skip this step as nothing was pushed to Bitbucket" && exit 0; fi
          cd /tmp/com.linked-planet.ktor-bitbucket-example;
          BITBUCKET_COMMIT_HASH=$(git log --format="%h" -n 1);
          echo "Searching Pipeline for commit $BITBUCKET_COMMIT_HASH in Bitbucket ...";
          sleep 30;
          BITBUCKET_PIPELINE_RESPONSE=$(curl -s "https://api.bitbucket.org/2.0/repositories/linked-planet/com.linked-planet.ktor-bitbucket-example/commit/$BITBUCKET_COMMIT_HASH/statuses");
          BITBUCKET_PIPELINE_ERROR=$(echo "$BITBUCKET_PIPELINE_RESPONSE" | jq -r '.error.message');
          if [[ $BITBUCKET_PIPELINE_ERROR == "Commit not found" ]]; then echo "-> Nothing to commit and therewith no Pipeline run" && exit 0; fi;
          BITBUCKET_PIPELINE_LINK=$(echo $BITBUCKET_PIPELINE_RESPONSE | jq -r '.values[0].url');
          echo "Watching Pipeline $BITBUCKET_PIPELINE_LINK in Bitbucket ...";
          BITBUCKET_PIPELINE_STATE=$(echo $BITBUCKET_PIPELINE_RESPONSE | jq -r '.values[0].state');
          while [ $BITBUCKET_PIPELINE_STATE = "INPROGRESS" ]; do \
            echo "Pipeline still running, waiting ..."; \
            sleep 5;
            BITBUCKET_PIPELINE_RESPONSE=$(curl -s "https://api.bitbucket.org/2.0/repositories/linked-planet/com.linked-planet.ktor-bitbucket-example/commit/$BITBUCKET_COMMIT_HASH/statuses"); \
            BITBUCKET_PIPELINE_STATE=$(echo $BITBUCKET_PIPELINE_RESPONSE | jq -r '.values[0].state'); \
          done;
          if [[ $BITBUCKET_PIPELINE_STATE == "FAILED" || $BITBUCKET_PIPELINE_STATE == "STOPPED" ]]; then echo "-> Bitbucket Pipeline failed/stopped" && exit 1; fi;
          if [[ $BITBUCKET_PIPELINE_STATE == "SUCCESSFUL" ]]; then echo "-> Bitbucket Pipeline succedded" && exit 0; fi;
          echo "-> Unknown Error with Bitbucket Pipeline" && exit 1