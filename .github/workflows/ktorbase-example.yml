name: KtorBase-Example

on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 1 * * *"
  release:
    types: [ published ]

jobs:

  github-build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-example-ktorbase-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-example-ktorbase-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Initialize
        run: >
          BRANCH=${GITHUB_REF#refs/heads/};
          curl -O -s "https://raw.githubusercontent.com/linked-planet/ktorbase/$BRANCH/init.sh";
          sh ./init.sh /tmp com.linked-planet ktor-example "$BRANCH";
          echo "Creating temporary repository with initial version ...";
          cd /tmp/com.linked-planet.ktor-example;
          git init;
          git config user.email "test@example.com";
          git config user.name "test";
          git add .;
          git commit -m "Initial commit"

      - name: Update
        run: >
          BRANCH=${GITHUB_REF#refs/heads/};
          curl -O -s "https://raw.githubusercontent.com/linked-planet/ktorbase/$BRANCH/update.sh";
          sh ./update.sh /tmp/com.linked-planet.ktor-example com.linked-planet ktor-example "$BRANCH";
          echo "Comparing updated version with initial version ...";
          cd /tmp/com.linked-planet.ktor-example;
          git add .;
          git diff --cached --exit-code

      - name: Gradle Build
        run: cd /tmp/com.linked-planet.ktor-example && ./gradlew build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Build and Push
        working-directory: /tmp/com.linked-planet.ktor-example
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_REGISTRY_URL: ${{ secrets.AWS_REGISTRY_URL }}
        run: ./pipelines/docker-build-push-aws.sh latest ${GITHUB_SHA}

      - name: Deploy CloudFormation
        working-directory: /tmp/com.linked-planet.ktor-example
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: ./pipelines/deploy.sh test ${GITHUB_SHA} && ./pipelines/deploy-wait.sh test ${GITHUB_SHA}

      - name: Run Integration Tests
        working-directory: /tmp/com.linked-planet.ktor-example
        env:
          BACKEND_BASE_URL: https://ktorbase.opencpms.io/
          BACKEND_PORT: 443
        run: ./gradlew integrationTest
